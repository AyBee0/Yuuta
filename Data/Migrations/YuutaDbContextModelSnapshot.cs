// <auto-generated />
using System;
using DataAccessLayer.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(YuutaDbContext))]
    partial class YuutaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0-preview.6.20312.4");

            modelBuilder.Entity("Data.Models.Events.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EventId");

                    b.ToTable("Event");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Event");
                });

            modelBuilder.Entity("DataAccessLayer.Models.ChannelModels.Channel", b =>
                {
                    b.Property<ulong>("ChannelDid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChannelType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GuildId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("GuildId1")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ChannelDid");

                    b.HasIndex("GuildId1");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("DataAccessLayer.Models.CommandModels.CommandRestrictionOverload", b =>
                {
                    b.Property<int>("RestrictionOverloadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Authorize")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CommandId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("GuildDid")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("RoleDid")
                        .HasColumnType("INTEGER");

                    b.HasKey("RestrictionOverloadId");

                    b.HasIndex("CommandId");

                    b.ToTable("CommandRestrictionOverloads");
                });

            modelBuilder.Entity("DataAccessLayer.Models.CommandModels.YuutaCommand", b =>
                {
                    b.Property<int>("CommandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CommandName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CommandType")
                        .HasColumnType("INTEGER");

                    b.HasKey("CommandId");

                    b.ToTable("Commands");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Events.EventUser", b =>
                {
                    b.Property<ulong>("EventUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DirectMessageEventEventId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EventId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EventUserId");

                    b.HasIndex("DirectMessageEventEventId");

                    b.HasIndex("EventId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Events.ReactionLinkedEvent", b =>
                {
                    b.Property<int>("ReactionLinkedEventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("ChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmojiName")
                        .HasColumnType("TEXT");

                    b.Property<int>("EventId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EventType")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("MessageId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ReactionLinkedEventId");

                    b.ToTable("ReactionLinkedEvents");
                });

            modelBuilder.Entity("DataAccessLayer.Models.GuildModels.Attachment", b =>
                {
                    b.Property<int>("AttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AttachmentUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("GuildMacroId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AttachmentId");

                    b.HasIndex("GuildMacroId");

                    b.ToTable("Attachment");
                });

            modelBuilder.Entity("DataAccessLayer.Models.GuildModels.Guild", b =>
                {
                    b.Property<ulong>("GuildId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("GuildName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GuildId");

                    b.ToTable("Guilds");
                });

            modelBuilder.Entity("DataAccessLayer.Models.GuildModels.GuildMacro", b =>
                {
                    b.Property<int>("GuildMacroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DeleteAfterSend")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GuildId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("GuildId1")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Response")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GuildMacroId");

                    b.HasIndex("GuildId1");

                    b.ToTable("GuildMacros");
                });

            modelBuilder.Entity("DataAccessLayer.Models.GuildModels.RoleMessages.RoleMessage", b =>
                {
                    b.Property<int>("RoleMessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("ChannelDid")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GuildId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("GuildId1")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("MessageDid")
                        .HasColumnType("INTEGER");

                    b.HasKey("RoleMessageId");

                    b.HasIndex("GuildId1");

                    b.ToTable("RoleMessages");
                });

            modelBuilder.Entity("DataAccessLayer.Models.GuildModels.RoleMessages.RoleMessageItem", b =>
                {
                    b.Property<int>("RoleMessageItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmojiName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleMessageId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RoleMessageItemId");

                    b.HasIndex("RoleMessageId");

                    b.ToTable("RoleMessageItems");
                });

            modelBuilder.Entity("DataAccessLayer.Models.RoleModels.Role", b =>
                {
                    b.Property<ulong>("RoleDid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GuildId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("GuildId1")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RoleMessageItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoleType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RoleDid");

                    b.HasIndex("GuildId1");

                    b.HasIndex("RoleMessageItemId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Events.DirectMessageEvent", b =>
                {
                    b.HasBaseType("Data.Models.Events.Event");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("DirectMessageEvent");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Events.GuildMessageEvent", b =>
                {
                    b.HasBaseType("Data.Models.Events.Event");

                    b.Property<ulong>("ChannelToSend")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .HasColumnName("GuildMessageEvent_Text")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("GuildMessageEvent");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Events.RoleEvent", b =>
                {
                    b.HasBaseType("Data.Models.Events.Event");

                    b.Property<int>("RoleEventType")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("User")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("RoleEvent");
                });

            modelBuilder.Entity("DataAccessLayer.Models.ChannelModels.Channel", b =>
                {
                    b.HasOne("DataAccessLayer.Models.GuildModels.Guild", "Guild")
                        .WithMany("Channels")
                        .HasForeignKey("GuildId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccessLayer.Models.CommandModels.CommandRestrictionOverload", b =>
                {
                    b.HasOne("DataAccessLayer.Models.CommandModels.YuutaCommand", "Command")
                        .WithMany("RestrictionOverloads")
                        .HasForeignKey("CommandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccessLayer.Models.Events.EventUser", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Events.DirectMessageEvent", null)
                        .WithMany("UserToSend")
                        .HasForeignKey("DirectMessageEventEventId");

                    b.HasOne("Data.Models.Events.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccessLayer.Models.GuildModels.Attachment", b =>
                {
                    b.HasOne("DataAccessLayer.Models.GuildModels.GuildMacro", "GuildMacro")
                        .WithMany("Attachments")
                        .HasForeignKey("GuildMacroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccessLayer.Models.GuildModels.Guild", b =>
                {
                    b.OwnsOne("DataAccessLayer.Models.GuildModels.GuildSettings", "GuildSettings", b1 =>
                        {
                            b1.Property<int>("GuildSettingId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<string>("GoodbyeChannel")
                                .HasColumnType("TEXT");

                            b1.Property<string>("GoodbyeMessage")
                                .HasColumnType("TEXT");

                            b1.Property<ulong>("GuildId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("WelcomeChannel")
                                .HasColumnType("TEXT");

                            b1.Property<string>("WelcomeMessage")
                                .HasColumnType("TEXT");

                            b1.HasKey("GuildSettingId");

                            b1.HasIndex("GuildId")
                                .IsUnique();

                            b1.ToTable("GuildSettings");

                            b1.WithOwner()
                                .HasForeignKey("GuildId");
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Models.GuildModels.GuildMacro", b =>
                {
                    b.HasOne("DataAccessLayer.Models.GuildModels.Guild", "Guild")
                        .WithMany("GuildMacros")
                        .HasForeignKey("GuildId1");
                });

            modelBuilder.Entity("DataAccessLayer.Models.GuildModels.RoleMessages.RoleMessage", b =>
                {
                    b.HasOne("DataAccessLayer.Models.GuildModels.Guild", "Guild")
                        .WithMany("RoleMessages")
                        .HasForeignKey("GuildId1");
                });

            modelBuilder.Entity("DataAccessLayer.Models.GuildModels.RoleMessages.RoleMessageItem", b =>
                {
                    b.HasOne("DataAccessLayer.Models.GuildModels.RoleMessages.RoleMessage", "RoleMessage")
                        .WithMany("RoleMessageItems")
                        .HasForeignKey("RoleMessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccessLayer.Models.RoleModels.Role", b =>
                {
                    b.HasOne("DataAccessLayer.Models.GuildModels.Guild", "Guild")
                        .WithMany("Roles")
                        .HasForeignKey("GuildId1");

                    b.HasOne("DataAccessLayer.Models.GuildModels.RoleMessages.RoleMessageItem", null)
                        .WithMany("RolesToAdd")
                        .HasForeignKey("RoleMessageItemId");
                });
#pragma warning restore 612, 618
        }
    }
}
